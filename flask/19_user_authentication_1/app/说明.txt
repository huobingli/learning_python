###  7.3.2

转换成工厂函数的操作让定义路由变得更加复杂了，在单脚本录制程序中，程序实例存在于全局作用域中，路由可以直接使用app.route修饰器定义。

但现在程序在运行时候创建，只有调用create_app()之后才能使用app.route()修饰器，这时定义路由就太晚了。和路由一样，自定义的错误页面处理程序也面临相同的困难，因为错误页面处理程序使用app.errorhandler修饰器定义。

幸好Flask使用蓝本提供了更好的解决方法。

蓝本和程序类似，也可以定义路由，不同的是，在蓝本中定义的路由处理休眠状态，知道蓝本注册到程序上后，路由才真正成为程序的一部分。

使用位于全局作用域中的蓝本时候，定义路由的方法几乎和单脚本程序一样。

和程序一样，蓝本可以在单个文件中定义，也可以使用更结构化的方式在包中的多个模块中创建。

为了获得最大的灵活性，成鞥徐包中创建了一个子包，用于保存蓝本。

```
# app/mian/__init__.py 创建蓝本
from flask import Blueprint

main = Blueprint('main', '__name__') #通过实例化一个Blueprint类可以创建蓝本。main是蓝本的包名，__name__是默认参数。
from . import views, errors #蓝本路由在views.py中，错误处理程序在errors.py中。


```


